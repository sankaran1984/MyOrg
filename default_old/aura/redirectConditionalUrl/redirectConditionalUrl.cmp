<!--
 * Copyright (c) 2018, Salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root
 -->

<!-- 
To be used as a quick action, a Lightning component needs to meet certain conditions. It needs to be configured as able to be executed as an action. It also needs to know the context of the page that it’s executed from. And, since you’re modifying data and want to save the changes, you need an Apex class to help with the work.

For the component to know its page context, it must implement the "force:hasRecordId" interface. 
This interface helps save the record ID, so you can make changes to the record.

For the component to be used as a quick action, it must also implement the  "force:lightningQuickActionWithoutHeader" interface.
-->

<aura:component implements="force:lightningQuickActionWithoutHeader,force:hasRecordId"
                controller="RedirectConditionalUrlController">
    			<!--Replace RedirectConditionalUrlController with your Apex class -->

	 <!-- This attribute saves the record ID -->
     <aura:attribute name="recordId" type="String" />
    
     <!-- This is a placeholder for the object that we’ll get the data from.
          First we get it from the server, then we read it from the controller. -->
     <aura:attribute name="account" type="Account" />
     
     <div class="slds-modal__header">
         <h2 class="slds-text-heading_medium slds-hyphenate">Select Address to Show on Map</h2>
     </div>
     <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
         <lightning:button class="slds-button_neutral" onclick="{!c.openBillingAddress}" label="Use Billing Address" />
         <br/><br/>
         <lightning:button class="slds-button_brand" onclick="{!c.openShippingAddress}" label="Use Shipping Address" />
         <!-- 
            The "c" in "{!c.nameOfTheFunction}" is how the component communicates with the 
            Javascript controller.
            "nameOfTheFunction" will be replaced with the name of the function to be executed in the
            Javascript controller.
         -->
     </div>
     <div class="slds-modal__footer">
         <lightning:button class="slds-button_brand" onclick="{!c.cancel}" label="Cancel"/>
     </div>
     
     <!-- The height of the modal is defined in Salesforce when you create the new action. -->
     <!-- Recommended height: 250px -->
     
 </aura:component>